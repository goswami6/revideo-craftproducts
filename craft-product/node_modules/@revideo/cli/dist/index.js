#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const telemetry_1 = require("@revideo/telemetry");
const commander_1 = require("commander");
const index_1 = require("./server/index");
const player_1 = require("./server/player");
const program = new commander_1.Command();
program
    .name('revideo')
    .description('CLI to interact with the revideo service')
    .version('0.4.1');
program
    .command('serve')
    .description('UNSTABLE (still WIP): Start the revideo server in development mode. Watches for changes ' +
    'in the project directory and re-builds the player on each change.')
    .option('--projectFile <path>', 'Path to the project file', './src/project.ts')
    .option('--port <number>', 'Port on which to start the server', '4000')
    .option('--watchDir <path>', 'Directory to watch for changes', 'src')
    .action(async (options) => {
    (0, telemetry_1.sendEvent)(telemetry_1.EventName.CLICommand);
    const { projectFile, port } = options;
    process.env.PROJECT_FILE = projectFile;
    process.env.REVIDEO_PORT = port;
    await (0, player_1.buildProject)().catch(() => {
        process.exit(1);
    });
    (0, index_1.createServer)(options.watchDir).listen(port, () => {
        console.log(`Server listening on port ${port}`);
        console.log();
    });
});
program.parse(process.argv);

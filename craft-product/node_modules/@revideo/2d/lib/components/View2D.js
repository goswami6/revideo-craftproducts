var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var View2D_1;
import { PlaybackState, lazy } from '@revideo/core';
import { initial, signal } from '../decorators';
import { nodeName } from '../decorators/nodeName';
import { useScene2D } from '../scenes/useScene2D';
import { Rect } from './Rect';
let View2D = View2D_1 = class View2D extends Rect {
    constructor(props) {
        super({
            composite: true,
            fontFamily: 'Roboto',
            fontSize: 48,
            lineHeight: '120%',
            textWrap: false,
            fontStyle: 'normal',
            ...props,
        });
        this.view2D = this;
        View2D_1.shadowRoot.append(this.element);
        this.applyFlex();
    }
    dispose() {
        this.removeChildren();
        super.dispose();
    }
    async render(context) {
        this.computedSize();
        this.computedPosition();
        await super.render(context);
    }
    /**
     * Find a node by its key.
     *
     * @param key - The key of the node.
     */
    findKey(key) {
        return useScene2D().getNode(key) ?? null;
    }
    requestLayoutUpdate() {
        this.updateLayout();
    }
    requestFontUpdate() {
        this.applyFont();
    }
    view() {
        return this;
    }
};
__decorate([
    initial(PlaybackState.Paused),
    signal()
], View2D.prototype, "playbackState", void 0);
__decorate([
    initial(0),
    signal()
], View2D.prototype, "globalTime", void 0);
__decorate([
    initial(0),
    signal()
], View2D.prototype, "fps", void 0);
__decorate([
    signal()
], View2D.prototype, "assetHash", void 0);
__decorate([
    lazy(() => {
        const frameID = 'revideo-2d-frame';
        let frame = document.querySelector(`#${frameID}`);
        if (!frame) {
            frame = document.createElement('div');
            frame.id = frameID;
            frame.style.position = 'absolute';
            frame.style.pointerEvents = 'none';
            frame.style.top = '0';
            frame.style.left = '0';
            frame.style.opacity = '0';
            frame.style.overflow = 'hidden';
            document.body.prepend(frame);
        }
        return frame.shadowRoot ?? frame.attachShadow({ mode: 'open' });
    })
], View2D, "shadowRoot", void 0);
View2D = View2D_1 = __decorate([
    nodeName('View2D')
], View2D);
export { View2D };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmlldzJELmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL1ZpZXcyRC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsT0FBTyxFQUFDLGFBQWEsRUFBZ0IsSUFBSSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2hFLE9BQU8sRUFBQyxPQUFPLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzlDLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNoRCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFFaEQsT0FBTyxFQUFDLElBQUksRUFBWSxNQUFNLFFBQVEsQ0FBQztBQU9oQyxJQUFNLE1BQU0sY0FBWixNQUFNLE1BQU8sU0FBUSxJQUFJO0lBa0M5QixZQUFtQixLQUFrQjtRQUNuQyxLQUFLLENBQUM7WUFDSixTQUFTLEVBQUUsSUFBSTtZQUNmLFVBQVUsRUFBRSxRQUFRO1lBQ3BCLFFBQVEsRUFBRSxFQUFFO1lBQ1osVUFBVSxFQUFFLE1BQU07WUFDbEIsUUFBUSxFQUFFLEtBQUs7WUFDZixTQUFTLEVBQUUsUUFBUTtZQUNuQixHQUFHLEtBQUs7U0FDVCxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUVuQixRQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25CLENBQUM7SUFFZSxPQUFPO1FBQ3JCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN0QixLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVlLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBaUM7UUFDNUQsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBQ3hCLE1BQU0sS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLE9BQU8sQ0FBd0IsR0FBVztRQUMvQyxPQUFRLFVBQVUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQU8sSUFBSSxJQUFJLENBQUM7SUFDbEQsQ0FBQztJQUVrQixtQkFBbUI7UUFDcEMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFa0IsaUJBQWlCO1FBQ2xDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRWUsSUFBSTtRQUNsQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRixDQUFBO0FBNUR5QjtJQUZ2QixPQUFPLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQztJQUM3QixNQUFNLEVBQUU7NkNBQ2dFO0FBSWpEO0lBRnZCLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDVixNQUFNLEVBQUU7MENBQ3NEO0FBSXZDO0lBRnZCLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDVixNQUFNLEVBQUU7bUNBQytDO0FBR2hDO0lBRHZCLE1BQU0sRUFBRTt5Q0FDcUQ7QUFmaEQ7SUFoQmIsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNULE1BQU0sT0FBTyxHQUFHLGtCQUFrQixDQUFDO1FBQ25DLElBQUksS0FBSyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQWlCLElBQUksT0FBTyxFQUFFLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDWCxLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN0QyxLQUFLLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztZQUNuQixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUM7WUFDbEMsS0FBSyxDQUFDLEtBQUssQ0FBQyxhQUFhLEdBQUcsTUFBTSxDQUFDO1lBQ25DLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztZQUN0QixLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxHQUFHLENBQUM7WUFDdkIsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1lBQzFCLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUNoQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQixDQUFDO1FBQ0QsT0FBTyxLQUFLLENBQUMsVUFBVSxJQUFJLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBQyxJQUFJLEVBQUUsTUFBTSxFQUFDLENBQUMsQ0FBQztJQUNoRSxDQUFDLENBQUM7Z0NBQ21DO0FBakIxQixNQUFNO0lBRGxCLFFBQVEsQ0FBQyxRQUFRLENBQUM7R0FDTixNQUFNLENBaUZsQiJ9
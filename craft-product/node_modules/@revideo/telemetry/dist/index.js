"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendEvent = exports.EventName = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const posthog_node_1 = require("posthog-node");
const Client = new posthog_node_1.PostHog('phc_YpKoFD7smPe4SXRtVyMW766uP9AjUwnuRJ8hh2EJcVv', {
    host: 'https://eu.posthog.com',
});
process.on('beforeExit', async () => {
    await Client.shutdown();
});
var EventName;
(function (EventName) {
    EventName["RenderStarted"] = "revideo-render-started";
    EventName["ServerStarted"] = "revideo-server-started";
    EventName["CLICommand"] = "revideo-cli-command";
    EventName["CreateCommand"] = "revideo-create-command";
    EventName["Error"] = "revideo-error";
})(EventName || (exports.EventName = EventName = {}));
async function getCurrentVersion() {
    try {
        const packageData = JSON.parse(
        // Relative to this file: ../package.json
        await fs_1.default.promises.readFile(path_1.default.resolve(__dirname, '../package.json'), 'utf-8'));
        return packageData.version;
    }
    catch (e) {
        return 'ERROR';
    }
}
async function getDistinctId() {
    try {
        return await fs_1.default.promises.readFile(path_1.default.resolve(__dirname, '../id.txt'), 'utf-8');
    }
    catch (e) {
        return 'anonymous-user';
    }
}
async function sendEvent(eventName, eventProperties = {}) {
    if (process.env.DISABLE_TELEMETRY === 'true') {
        return;
    }
    try {
        const [version, distinctId] = await Promise.all([
            getCurrentVersion(),
            getDistinctId(),
        ]);
        Client.capture({
            distinctId,
            event: eventName,
            properties: {
                version,
                ...eventProperties,
            },
        });
    }
    catch (e) {
        console.error(e);
    }
}
exports.sendEvent = sendEvent;
//# sourceMappingURL=index.js.map
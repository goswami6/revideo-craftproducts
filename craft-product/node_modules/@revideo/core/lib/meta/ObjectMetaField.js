import { ValueDispatcher } from '../events';
import { MetaField } from './MetaField';
class ObjectMetaFieldInternal extends MetaField {
    /**
     * Triggered when the nested fields change.
     *
     * @eventProperty
     */
    get onFieldsChanged() {
        return this.event.subscribable;
    }
    constructor(name, fields) {
        const map = new Map(Object.entries(fields));
        super(name, Object.fromEntries(Array.from(map, ([name, field]) => [name, field.get()])));
        this.type = Object;
        this.ignoreChange = false;
        this.customFields = {};
        this.handleChange = () => {
            if (this.ignoreChange)
                return;
            this.value.current = {
                ...this.transform('get'),
                ...this.customFields,
            };
        };
        this.event = new ValueDispatcher([...map.values()]);
        this.fields = map;
        for (const [key, field] of this.fields) {
            Object.defineProperty(this, key, { value: field });
            field.onChanged.subscribe(this.handleChange);
        }
    }
    set(value) {
        this.ignoreChange = true;
        for (const [key, fieldValue] of Object.entries(value)) {
            const field = this.fields.get(key);
            if (field) {
                field.set(fieldValue);
            }
            else {
                this.customFields[key] = fieldValue;
            }
        }
        this.ignoreChange = false;
        this.handleChange();
    }
    serialize() {
        return {
            ...this.transform('serialize'),
            ...this.customFields,
        };
    }
    clone() {
        const cloned = new this.constructor(this.name, this.transform('clone'));
        cloned.set(structuredClone(this.customFields));
        return cloned;
    }
    transform(fn) {
        const transformed = Object.fromEntries(Array.from(this.fields, ([name, field]) => [name, field[fn]()]));
        return transformed;
    }
}
/**
 * Represents an object with nested meta-fields.
 */
export const ObjectMetaField = ObjectMetaFieldInternal;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT2JqZWN0TWV0YUZpZWxkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21ldGEvT2JqZWN0TWV0YUZpZWxkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDMUMsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQW1CdEMsTUFBTSx1QkFFSixTQUFRLFNBQXFCO0lBRzdCOzs7O09BSUc7SUFDSCxJQUFXLGVBQWU7UUFDeEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQztJQUNqQyxDQUFDO0lBT0QsWUFBbUIsSUFBWSxFQUFFLE1BQVM7UUFDeEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQzVDLEtBQUssQ0FDSCxJQUFJLEVBQ0osTUFBTSxDQUFDLFdBQVcsQ0FDaEIsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FDMUMsQ0FDaEIsQ0FBQztRQXZCWSxTQUFJLEdBQUcsTUFBTSxDQUFDO1FBV3BCLGlCQUFZLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLGlCQUFZLEdBQTRCLEVBQUUsQ0FBQztRQW9EM0MsaUJBQVksR0FBRyxHQUFHLEVBQUU7WUFDNUIsSUFBSSxJQUFJLENBQUMsWUFBWTtnQkFBRSxPQUFPO1lBQzlCLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHO2dCQUNuQixHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO2dCQUN4QixHQUFHLElBQUksQ0FBQyxZQUFZO2FBQ3JCLENBQUM7UUFDSixDQUFDLENBQUM7UUE3Q0EsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLGVBQWUsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztRQUNsQixLQUFLLE1BQU0sQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ3ZDLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxFQUFDLEtBQUssRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDO1lBQ2pELEtBQUssQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMvQyxDQUFDO0lBQ0gsQ0FBQztJQUVlLEdBQUcsQ0FBQyxLQUEwQjtRQUM1QyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztRQUN6QixLQUFLLE1BQU0sQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ3RELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ25DLElBQUksS0FBSyxFQUFFLENBQUM7Z0JBQ1YsS0FBSyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUN4QixDQUFDO2lCQUFNLENBQUM7Z0JBQ04sSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsR0FBRyxVQUFVLENBQUM7WUFDdEMsQ0FBQztRQUNILENBQUM7UUFDRCxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUMxQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVlLFNBQVM7UUFDdkIsT0FBTztZQUNMLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUM7WUFDOUIsR0FBRyxJQUFJLENBQUMsWUFBWTtTQUNyQixDQUFDO0lBQ0osQ0FBQztJQUVlLEtBQUs7UUFDbkIsTUFBTSxNQUFNLEdBQUcsSUFBVSxJQUFJLENBQUMsV0FBWSxDQUN4QyxJQUFJLENBQUMsSUFBSSxFQUNULElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQ3hCLENBQUM7UUFDRixNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztRQUUvQyxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBVVMsU0FBUyxDQUNqQixFQUFRO1FBRVIsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLFdBQVcsQ0FDcEMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FDbkMsQ0FBQztRQUUvQixPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0NBQ0Y7QUFRRDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyx1QkFLOUIsQ0FBQyJ9
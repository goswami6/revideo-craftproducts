import { SharedWebGLContext, WebGLContextOwner } from '../app/SharedWebGLContext';
import { Scene } from './Scene';
/**
 * @internal
 */
export declare const UNIFORM_RESOLUTION = "resolution";
/**
 * @internal
 */
export declare const UNIFORM_DESTINATION_TEXTURE = "destinationTexture";
/**
 * @internal
 */
export declare const UNIFORM_SOURCE_TEXTURE = "sourceTexture";
/**
 * @internal
 */
export declare const UNIFORM_TIME = "time";
/**
 * @internal
 */
export declare const UNIFORM_DELTA_TIME = "deltaTime";
/**
 * @internal
 */
export declare const UNIFORM_FRAMERATE = "framerate";
/**
 * @internal
 */
export declare const UNIFORM_FRAME = "frame";
/**
 * @internal
 */
export declare const UNIFORM_SOURCE_MATRIX = "sourceMatrix";
/**
 * @internal
 */
export declare const UNIFORM_DESTINATION_MATRIX = "destinationMatrix";
/**
 * @internal
 */
export declare class Shaders implements WebGLContextOwner {
    private readonly scene;
    private readonly sharedContext;
    private gl;
    private positionBuffer;
    private sourceTexture;
    private destinationTexture;
    private positionLocation;
    private readonly quadPositions;
    constructor(scene: Scene, sharedContext: SharedWebGLContext);
    setup(gl: WebGL2RenderingContext): void;
    teardown(gl: WebGL2RenderingContext): void;
    private handleReload;
    private updateViewport;
    getGL(): WebGL2RenderingContext;
    getProgram(fragment: string): WebGLProgram | null;
    copyTextures(destination: TexImageSource, source: TexImageSource): void;
    clear(): void;
    render(): void;
    private copyTexture;
}
//# sourceMappingURL=Shaders.d.ts.map
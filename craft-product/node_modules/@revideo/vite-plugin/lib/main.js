"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const partials_1 = require("./partials");
const metrics_1 = require("./partials/metrics");
const plugins_1 = require("./plugins");
const utils_1 = require("./utils");
exports.default = ({ project = './src/project.ts', output = './output', bufferedAssets = /^$/, editor = '@revideo/ui', proxy, buildForEditor, } = {}) => {
    const plugins = [];
    const outputPath = path_1.default.resolve(output);
    const projects = (0, utils_1.getProjects)(project);
    return [
        {
            name: 'revideo',
            async configResolved(resolvedConfig) {
                plugins.push(...resolvedConfig.plugins
                    .filter(plugins_1.isPlugin)
                    .map(plugin => plugin[plugins_1.PLUGIN_OPTIONS]));
                await Promise.all(plugins.map(plugin => plugin.config?.({
                    output: outputPath,
                    projects: projects.list,
                })));
            },
        },
        (0, partials_1.metaPlugin)(),
        (0, partials_1.settingsPlugin)(),
        (0, partials_1.scenesPlugin)(),
        (0, partials_1.exporterPlugin)({ outputPath }),
        (0, partials_1.ffmpegExporterPlugin)({ output: outputPath }),
        (0, partials_1.editorPlugin)({ editor, projects }),
        (0, partials_1.projectsPlugin)({ projects, plugins, buildForEditor }),
        (0, partials_1.assetsPlugin)({ bufferedAssets }),
        (0, partials_1.webglPlugin)(),
        (0, partials_1.corsProxyPlugin)(proxy),
        (0, metrics_1.metricsPlugin)(),
    ];
};
//# sourceMappingURL=main.js.map